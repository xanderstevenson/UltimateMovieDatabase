{"version":3,"sources":["pages/NowPlaying/NowPlaying.js","pages/Popular/Popular.js","pages/TopRated/TopRated.js","pages/Search/Search.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["info","underline","textDecoration","getTMDBdata","axios","get","then","response","JSON","stringify","toString","split","catch","error","alert","getTitleNames","str","list2","list3","i","length","replace","push","getNiceListofTitles","list","map","item","movieID","substring","item2","movieURL","react_default","a","createElement","class","href","target","test","NowPlaying","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","setTimeout","console","log","setState","getData","className","style","Component","Popular","index1","indexOf","TopRated","Search","handleChange","event","value","Fragment","htmlFor","type","name","onChange","id","placeholder","vid","charAt","moneyIndex","slice","Home","App","react_router_dom","to","src","alt","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc6b06d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nvar info = []\nvar underline = {\n    textDecoration: 'underline'\n}\n\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleNames(str){\n    var str2 = str.toString()\n    var id = 0\n    var list2 = str2.split('\"')\n    var list3 = []\n    for(let i = 0; i < list2.length; i ++){\n        if(list2[i] == \"title\"){\n            list2[i].replace('title', '')\n            list3.push(list2[i + 2] + list2[i - 5])   \n        }\n    }\n    return list3 \n}\n\n\nfunction getNiceListofTitles(list){\n    var newlist = ''\n    return list.map((item)=>{\n      var movieID = item.substring(item.length-7)\n      var item2 = item.substring(0, item.length-8)\n      var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n      return <tr><td><a class=\"link\" href= {movieURL} target=\"#blank\">{item2}</a></td></tr>\n    })\n}\n\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nclass NowPlaying extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n          console.log('Our data is fetched');\n          this.setState({\n            data: test\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n\n\nrender(){\n    return ( \n        <div>\n            <br></br>\n            <h1 className='page-name'>Now Playing</h1>  \n            <br></br>\n                <span><h2 class=\"black-text-outline\">The following movies are <span style={underline}>now playing</span> in theatres:</h2></span>\n                {/* <span>{getTitleNames(getTMDBdata())}</span> */}\n                <table class = \"movieTable\">\n<span>{getNiceListofTitles(getTitleNames(getTMDBdata()))}</span>\n                </table>\n            <div>\n            {/* {this.state.data} */}\n            </div>\n        </div>\n    )\n    }\n}\nexport default NowPlaying\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nvar info = []\nvar underline = {\n    textDecoration: 'underline'\n}\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/popular?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleNames(str){\n  var str2 = str.toString()\n  var id = 0\n  var list2 = str2.split('\"')\n  var list3 = []\n  for(let i = 0; i < list2.length; i ++){\n      if(list2[i] == \"title\"){\n          list2[i].replace('title', '')\n          list3.push(list2[i + 2] + list2[i - 5])   \n      }\n  }\n  return list3 \n}\n\n\nfunction getNiceListofTitles(list){\n  var newlist = ''\n  return list.map((item)=>{\n    var movieID = item.substring(item.length-7)\n    var item2 = item.substring(0, item.length-8)\n    var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n    return <tr><td><a class=\"link\" href= {movieURL} target=\"#blank\">{item2}</a></td></tr>\n  })\n}\n\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nclass Popular extends Component {\n\n\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n          console.log('Our data is fetched');\n          this.setState({\n            data: test\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n    \n    render(){\n    return ( \n        <div>\n            <br></br>\n            <h1 className='page-name'>Popular</h1>  \n            <br></br>\n                <span><h2 class=\"black-text-outline\">The following are <span style={underline}>popular</span> movies:</h2></span>\n                {/* <span>{getTitleNames(getTMDBdata())}</span> */}\n                <table class = \"movieTable\">\n<span>{getNiceListofTitles(getTitleNames(getTMDBdata()))}</span>\n                </table>\n                \n        \n            <div>\n            {/* {this.state.data} */}\n            </div>\n        </div>\n)\n\n    }\n}\n    export default Popular","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nvar info = []\nvar underline = {\n    textDecoration: 'underline'\n}\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleNames(str){\n  var str2 = str.toString()\n  var id = 0\n  var list2 = str2.split('\"')\n  var list3 = []\n  for(let i = 0; i < list2.length; i ++){\n      if(list2[i] == \"title\"){\n          list2[i].replace('title', '')\n          list3.push(list2[i + 2] + list2[i - 5])   \n      }\n  }\n  // alert(list3)\n  return list3 \n}\n\n\nfunction getNiceListofTitles(list){\n  var newlist = ''\n  var index = 0\n  return list.map((item)=>{\n   \n\n     var index1 = item.indexOf(':')\n     var index2 = item.indexOf(',,')   \n    var movieID = item.substring(index1 + 1, item.length - 1)\n\n    var item2 = item.substring(0, index1)  \n    var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n    return <tr><td><a class=\"link\" href= {movieURL} target=\"#blank\">{item2}</a></td></tr>\n  })\n}\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nclass TopRated extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n          console.log('Our data is fetched');\n          this.setState({\n            data: test\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n    \n\n    render(){\n    return ( \n        <div>\n            <br></br>\n            <h1 className='page-name'>Top Rated</h1>  \n            <br></br>\n                <span><h2 class=\"black-text-outline\">These are the <span style={underline}>top rated</span> movies:</h2></span>\n                {/* <span>{getTitleNames(getTMDBdata())}</span> */}\n                <table class = \"movieTable\">\n<span>{getNiceListofTitles(getTitleNames(getTMDBdata()))}</span>\n                </table>\n            <div>\n            {/* {this.state.data} */}\n            </div>\n        </div>\n    )\n    }\n}\n    export default TopRated","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { MapsLocalLaundryService } from 'material-ui/svg-icons';\n\nvar info = []\n\n\n\nfunction getTMDBdata(vid){\n  let vid2 = vid + vid.charAt(vid.length - 1)\n\n  // alert(vid2)\n  axios.get('https://api.themoviedb.org/3/search/movie?query=' + vid + '&api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1&include_adult=false')\n \n  .then(response => JSON.stringify(response))\n  .then(response => {\n      info = response.toString().split(',')\n  })\n  .catch(function(error){\n      alert(error)\n  })  \n\n  return info\n}\n\nfunction getTitleNames(str){\n  var str2 = str.toString()\n  var count = 0\n  var list2 = str2.split('\"')\n  var list3 = []\n  var movieID = 0\n  for(let i = 0; i < list2.length; i ++){\n    if(list2[i] == \"id\"){\n      movieID = list2[i + 1].substring(1, list2[i + 1].length - 1)\n\n    }\n      if(list2[i] == \"title\"){\n          count +=1\n          list2[i].replace('title', '')\n          list3.push(list2[i + 2] + '$' +movieID + \", \")\n      }    \n  }\n  return list3\n}\n\nfunction getNiceListofTitles(list){\n  \n  \n  return list.map((item)=>{\n    let moneyIndex = item.indexOf('$')\n    let movieID = item.slice(moneyIndex + 1, item.length - 2)\n    let item2 = item.slice(0, moneyIndex)\n    var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n    return <tr><td><a class=\"link\" href={movieURL} target=\"#blank\">{item2}</a></td></tr>\n\n  \n})\n}\n\n\nclass Search extends Component {\n\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ' ',\n        }\n      }\n\n      handleChange = event => {\n        this.setState({ data: event.target.value });\n     };\n\n\n\n    // getData(){\n    //     setTimeout(() => {\n    //       this.setState({\n    //         data: ''\n    //       })\n    //     }, 1000)\n    //   }\n\n    // componentDidMount(){\n    //     this.getData();\n    //   }\n\n   \n    render() {\n    return (\n      <React.Fragment>\n        <div>\n         <br></br>\n        <h1 class='page-name'>Search</h1>\n        <br></br>\n        <br></br>\n        <span>\n            <form>\n            <label class=\"label\" htmlFor=\"movieSearch\">Type a Word or Phrase and Hit the SPACE BAR: </label>\n            <br></br>\n            <br></br>\n            <input type=\"text\"  value={this.state.data} name=\"movieSearch\" onChange={this.handleChange} id=\"movieSearch\" placeholder='moviename' />\n            <br></br>\n            <span>\n            </span>\n\n            </form>\n            <br></br>\n            <table class = \"movieTable\">\n            <div id='1'>\n            {getNiceListofTitles(getTitleNames(getTMDBdata(this.state.data)))}\n            </div>\n            </table>\n        </span>\n\n            <div>\n{/*         \n           {this.state.data}  */}\n            </div>\n        \n\n        </div>\n      </React.Fragment>\n    )\n    }\n}\n    export default Search;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nvar info = []\nvar underline = {\n    textDecoration: 'underline'\n}\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleNames(str){\n  var str2 = str.toString()\n  var id = 0\n  var list2 = str2.split('\"')\n  var list3 = []\n  for(let i = 0; i < list2.length; i ++){\n      if(list2[i] == \"title\"){\n\n          list2[i].replace('title', '')\n          list3.push(list2[i + 2] + list2[i - 5])   \n      }\n  }\n  return list3 \n}\nfunction getNiceListofTitles(list){\n  var newlist = ''\n  return list.map((item)=>{\n    var movieID = item.substring(item.length-7)\n    var item2 = item.substring(0, item.length-8)\n    var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n    return <tr><td><a class=\"link\" href= {movieURL} target=\"#blank\">{item2}</a></td></tr>\n  })\n}\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n          console.log('Our data is fetched');\n          this.setState({\n            data: ''\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n\n\n      render(){\n        return ( \n            <div>\n                <br></br>\n                <h1 className='page-name'>Home</h1>  \n                <br></br>\n                <span><h2><span class=\"black-text-outline\" style={underline}>Upcoming Releases</span>:</h2></span>\n                {/* <span>{getTitleNames(getTMDBdata())}</span> */}\n                <table class = \"movieTable\">\n<span>{getNiceListofTitles(getTitleNames(getTMDBdata()))}</span>\n                </table>\n                \n        \n            <div>\n            {/* {this.state.data} */}\n            </div>\n        </div>\n    )\n    }\n}\n    export default Home","import React, { Component } from 'react';\nimport NowPlaying from './pages/NowPlaying/NowPlaying.js'\nimport Popular from './pages/Popular/Popular.js'\nimport TopRated from './pages/TopRated/TopRated.js'\nimport Search from './pages/Search/Search.js'\nimport Home from './pages/Home/Home.js'\nimport './App.css';\nimport './index.css';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport RenderToLayer from 'material-ui/internal/RenderToLayer';\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data: ''\n    }\n  }\n\n  getData(){\n    setTimeout(() => {\n      console.log('Our data is fetched');\n      this.setState({\n        data: ''\n      })\n    }, 1000)\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n\n\n render(){\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n      <div id=\"circle\">\n        <h1 id=\"main-heading\">The <br></br>Ultimate <br></br>Moviegoers <br></br>Guide</h1>\n        </div> \n      </header>\n      \n<HashRouter>\n  {/* <NowPlaying/>\n  <Popular/>\n  <TopRated/>\n  <Search/> */}\n\n<table id=\"nav-table\">\n  <tbody>\n\n    <th className=\"th\"><NavLink to=\"/\">Home</NavLink></th>\n    <th className=\"th\"><NavLink to=\"/now-playing\">Now Playing</NavLink></th>\n    <th className=\"th\"><NavLink to=\"/popular\">Popular</NavLink></th>\n    <th className=\"th\"><NavLink to=\"/top-rated\">Top Rated</NavLink></th>\n    <th className=\"th\"><NavLink to=\"/search\">Search</NavLink></th>\n\n  </tbody>\n</table>\n\n<div className=\"content\">\n\n  <div class='container'>\n  <center class=\"black-text-outline\" id=\"from\">Brought to you by:</center>\n   <a href=\"https://www.themoviedb.org\" target=\"blank#\"><img id=\"screen\" src=\"https://res.cloudinary.com/dx5eoz5dw/image/upload/v1559533888/UltimateMoveDatabase/screen2.png\" alt=\"movie database logo\"/></a>\n   <Route exact path=\"/\" component={Home}/>\n    <Route path=\"/now-playing\" component={NowPlaying}/>\n    <Route path=\"/popular\" component={Popular}/>\n    <Route path=\"/top-rated\" component={TopRated}/>\n    <Route path=\"/search\" component={Search}/>\n  </div>\n  \n</div>\n\n</HashRouter>\n\n    <div>\n      {this.state.data}\n    </div>\n\n    </div>\n\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}