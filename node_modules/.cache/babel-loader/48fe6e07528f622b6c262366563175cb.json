{"ast":null,"code":"var _jsxFileName = \"/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/Search/Search.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar info = [];\nvar movie; // function getTMDBdata(){\n//     axios.get('https://api.themoviedb.org/3/search/movie?query=' + movie + '&api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1&include_adult=false')\n//     .then(response => JSON.stringify(response))\n//     .then(response => {\n//         info = response.toString().split(',')\n//     })\n//     .catch(function(error){\n//         alert(error)\n//     })  \n//     return info\n// }\n// function getTitleNames(str){\n//     var str2 = str.toString()\n//     var count = 0\n//     var list2 = str2.split('\"')\n//     var list3 = []\n//     for(let i = 0; i < list2.length; i ++){\n//         if(list2[i] == \"title\"){\n//             count +=1\n//             list2[i].replace('title', '')\n//             list3.push(list2[i + 2] + \", \")\n//         }\n//     }\n//     return list3\n// }\n// function getNiceListofTitles(list){\n//     var newlist = ''\n//     // for(let i = 0; i < list.length; i++){\n//     //  newlist += list[i] + \"/n\"\n//     // }\n//     return list.map((item)=>{\n//       return <p>{item}</p>\n//     })\n// }\n// function getMovie(){\n//     movie = 'red'\n//     var final = getNiceListofTitles(getTitleNames(getTMDBdata()))\n//     return final\n// }\n// var test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nfunction getMovie() {\n  if (document.getElementById('movieSearch').value.length > 0) {\n    movie = document.getElementById('movieSearch').value;\n  } else {\n    movie = '';\n  }\n\n  return movie;\n}\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      movie: ''\n    };\n  }\n\n  getData() {\n    setTimeout(() => {\n      function getTMDBdata() {\n        axios.get('https://api.themoviedb.org/3/search/movie?query=captain&api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1&include_adult=false').then(response => JSON.stringify(response)).then(response => {\n          info = response.toString().split(',');\n        }).catch(function (error) {\n          alert(error);\n        });\n        return info;\n      }\n\n      function getTitleNames(str) {\n        var str2 = str.toString();\n        var count = 0;\n        var list2 = str2.split('\"');\n        var list3 = [];\n\n        for (let i = 0; i < list2.length; i++) {\n          if (list2[i] == \"title\") {\n            count += 1;\n            list2[i].replace('title', '');\n            list3.push(list2[i + 2] + \", \");\n          }\n        }\n\n        return list3;\n      }\n\n      function getNiceListofTitles(list) {\n        var newlist = ''; // for(let i = 0; i < list.length; i++){\n        //  newlist += list[i] + \"/n\"\n        // }\n\n        return list.map(item => {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, item);\n        });\n      }\n\n      this.setState({\n        movie: getTMDBdata(),\n        data: getNiceListofTitles(getTitleNames(getTMDBdata()))\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      class: \"page-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"movieSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Search for a Movie: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"movieSearch\",\n      id: \"movieSearch\",\n      placeholder: \"moviename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submitButton\",\n      onClick: getMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.movie));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/Search/Search.js"],"names":["React","Component","axios","info","movie","getMovie","document","getElementById","value","length","Search","constructor","props","state","data","getData","setTimeout","getTMDBdata","get","then","response","JSON","stringify","toString","split","catch","error","alert","getTitleNames","str","str2","count","list2","list3","i","replace","push","getNiceListofTitles","list","newlist","map","item","setState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nvar info = []\nvar movie\n\n\n// function getTMDBdata(){\n\n//     axios.get('https://api.themoviedb.org/3/search/movie?query=' + movie + '&api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1&include_adult=false')\n//     .then(response => JSON.stringify(response))\n//     .then(response => {\n//         info = response.toString().split(',')\n//     })\n//     .catch(function(error){\n//         alert(error)\n//     })  \n//     return info\n// }\n\n// function getTitleNames(str){\n//     var str2 = str.toString()\n//     var count = 0\n//     var list2 = str2.split('\"')\n//     var list3 = []\n//     for(let i = 0; i < list2.length; i ++){\n//         if(list2[i] == \"title\"){\n//             count +=1\n//             list2[i].replace('title', '')\n//             list3.push(list2[i + 2] + \", \")\n//         }\n//     }\n//     return list3\n// }\n\n// function getNiceListofTitles(list){\n//     var newlist = ''\n//     // for(let i = 0; i < list.length; i++){\n//     //  newlist += list[i] + \"/n\"\n//     // }\n//     return list.map((item)=>{\n//       return <p>{item}</p>\n//     })\n// }\n\n// function getMovie(){\n//     movie = 'red'\n//     var final = getNiceListofTitles(getTitleNames(getTMDBdata()))\n//     return final\n// }\n\n// var test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nfunction getMovie(){\n  if(document.getElementById('movieSearch').value.length > 0){\n    movie = document.getElementById('movieSearch').value\n  }\n  else{\n    movie = ''\n  }\n  return movie\n}\n\n\nclass Search extends Component {\n\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: '',\n          movie: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n\n          function getTMDBdata(){\n\n            axios.get('https://api.themoviedb.org/3/search/movie?query=captain&api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1&include_adult=false')\n            .then(response => JSON.stringify(response))\n            .then(response => {\n                info = response.toString().split(',')\n            })\n            .catch(function(error){\n                alert(error)\n            })  \n            return info\n        }\n        \n        function getTitleNames(str){\n            var str2 = str.toString()\n            var count = 0\n            var list2 = str2.split('\"')\n            var list3 = []\n            for(let i = 0; i < list2.length; i ++){\n                if(list2[i] == \"title\"){\n                    count +=1\n                    list2[i].replace('title', '')\n                    list3.push(list2[i + 2] + \", \")\n                }\n            }\n            return list3\n        }\n        \n        function getNiceListofTitles(list){\n            var newlist = ''\n            // for(let i = 0; i < list.length; i++){\n            //  newlist += list[i] + \"/n\"\n            // }\n            return list.map((item)=>{\n              return <p>{item}</p>\n            })\n        }\n        \n\n\n          this.setState({\n            movie: getTMDBdata(),\n            data:  getNiceListofTitles(getTitleNames(getTMDBdata()))\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n\n    render() {\n\n\n    return (\n        \n        <div>\n         <br></br>\n        <h1 class='page-name'>Search</h1>\n        <br></br>\n        <br></br>\n        <span>\n            <form action=''>\n            <label htmlFor=\"movieSearch\">Search for a Movie: </label>\n            <br></br>\n            <br></br>\n            <input type=\"text\" name=\"movieSearch\" id=\"movieSearch\" placeholder='moviename' />\n            <br></br>\n            <span>\n            <button type=\"submit\" id=\"submitButton\" onClick={getMovie} >Submit</button>\n            </span>\n\n            </form>\n            <br></br>\n            {/* <span id='1'></span> */}\n        </span>\n\n            <div>\n            {this.state.movie}\n            </div>\n        \n\n        </div>\n    )\n    }\n}\n    export default Search;"]},"metadata":{},"sourceType":"module"}