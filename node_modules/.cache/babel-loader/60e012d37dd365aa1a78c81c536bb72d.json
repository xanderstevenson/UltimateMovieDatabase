{"ast":null,"code":"var _jsxFileName = \"/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/NowPlaying/NowPlaying.js\";\nimport React from 'react';\nimport axios from 'axios';\nconst apiURL = \"https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1\"; // const axios = require('axios');\n\nvar info = [];\n\nfunction getTMDBdata() {\n  axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1').then(response => JSON.stringify(response)).then(response => {\n    info = response.toString().split(',');\n  }).catch(function (error) {\n    alert(error);\n  });\n  return info;\n}\n\nfunction getTitleCount(str) {\n  var str2 = str.toString();\n  var list2 = str2.split(' ');\n  return str2.count('a');\n}\n\nfunction getTitles(str) {\n  var list = [];\n  var str2 = str.toString();\n\n  for (let i = 0; i < str2.length; i++) {\n    if (str2.substr(i, i + 4) == \"title\") {\n      // if(str2.charAt(i) == \"o\" && str2.charAt(i + 1) == 'r' && str2.charAt(i+13) == \"e\"){\n      list.push(str2.slice(i + 17, i + 36));\n    }\n  }\n\n  return list;\n}\n\nfunction getNiceListofTitles(list) {\n  var newlist = ''; // for(let i = 0; i < list.length; i++){\n  //  newlist += list[i] + \"/n\"\n  // }\n\n  return list.map(item => {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item);\n  });\n}\n\nfunction NowPlaying() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"page-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Now Playing\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"There are \".concat(getTitleCount(getTMDBdata()), \" movies currently playing in theatres:\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, getNiceListofTitles(getTitles(getTMDBdata()))));\n}\n\nexport default NowPlaying;","map":{"version":3,"sources":["/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/NowPlaying/NowPlaying.js"],"names":["React","axios","apiURL","info","getTMDBdata","get","then","response","JSON","stringify","toString","split","catch","error","alert","getTitleCount","str","str2","list2","count","getTitles","list","i","length","substr","push","slice","getNiceListofTitles","newlist","map","item","NowPlaying"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,MAAM,GAAG,+GAAf,C,CAEA;;AAGA,IAAIC,IAAI,GAAG,EAAX;;AAEA,SAASC,WAAT,GAAsB;AAClBH,EAAAA,KAAK,CAACI,GAAN,CAAU,+GAAV,EACCC,IADD,CACMC,QAAQ,IAAIC,IAAI,CAACC,SAAL,CAAeF,QAAf,CADlB,EAECD,IAFD,CAEMC,QAAQ,IAAI;AACdJ,IAAAA,IAAI,GAAGI,QAAQ,CAACG,QAAT,GAAoBC,KAApB,CAA0B,GAA1B,CAAP;AACH,GAJD,EAKCC,KALD,CAKO,UAASC,KAAT,EAAe;AAClBC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH,GAPD;AAQA,SAAOV,IAAP;AACH;;AAGD,SAASY,aAAT,CAAuBC,GAAvB,EAA2B;AACvB,MAAIC,IAAI,GAAGD,GAAG,CAACN,QAAJ,EAAX;AACA,MAAIQ,KAAK,GAAGD,IAAI,CAACN,KAAL,CAAW,GAAX,CAAZ;AAEA,SAAOM,IAAI,CAACE,KAAL,CAAW,GAAX,CAAP;AACH;;AAID,SAASC,SAAT,CAAmBJ,GAAnB,EAAuB;AACnB,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIJ,IAAI,GAAGD,GAAG,CAACN,QAAJ,EAAX;;AACA,OAAI,IAAIY,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,IAAI,CAACM,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5B,QAAGL,IAAI,CAACO,MAAL,CAAYF,CAAZ,EAAeA,CAAC,GAAG,CAAnB,KAAyB,OAA5B,EAAoC;AACpC;AACMD,MAAAA,IAAI,CAACI,IAAL,CAAUR,IAAI,CAACS,KAAL,CAAWJ,CAAC,GAAG,EAAf,EAAmBA,CAAC,GAAG,EAAvB,CAAV;AACL;AAEJ;;AACD,SAAOD,IAAP;AACH;;AAGD,SAASM,mBAAT,CAA6BN,IAA7B,EAAkC;AAC9B,MAAIO,OAAO,GAAG,EAAd,CAD8B,CAE9B;AACA;AACA;;AACA,SAAOP,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAQ;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAAP;AACD,GAFM,CAAP;AAGH;;AAID,SAASC,UAAT,GAAsB;AAElB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBhB,aAAa,CAACX,WAAW,EAAZ,CAAjC,4CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOuB,mBAAmB,CAACP,SAAS,CAAChB,WAAW,EAAZ,CAAV,CAA1B,CALA,CADJ;AASC;;AACL,eAAe2B,UAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nconst apiURL = \"https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1\"\n\n// const axios = require('axios');\n\n\nvar info = []\n\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleCount(str){\n    var str2 = str.toString()\n    var list2 = str2.split(' ')\n    \n    return str2.count('a')\n}\n\n\n\nfunction getTitles(str){\n    var list = []\n    var str2 = str.toString()\n    for(let i=0; i<str2.length; i++){\n        if(str2.substr(i, i + 4) == \"title\"){\n        // if(str2.charAt(i) == \"o\" && str2.charAt(i + 1) == 'r' && str2.charAt(i+13) == \"e\"){\n              list.push(str2.slice(i + 17, i + 36)) \n        }\n    \n    }\n    return list\n}\n\n\nfunction getNiceListofTitles(list){\n    var newlist = ''\n    // for(let i = 0; i < list.length; i++){\n    //  newlist += list[i] + \"/n\"\n    // }\n    return list.map((item)=>{\n      return <p>{item}</p>\n    })\n}\n\n\n\nfunction NowPlaying() {\n\n    return ( \n        <div>\n        <h1 className='page-name'>Now Playing</h1>  \n        <span>{`There are ${getTitleCount(getTMDBdata())} movies currently playing in theatres:`}</span>\n        <br></br>\n        <br></br>\n        <span>{getNiceListofTitles(getTitles(getTMDBdata()))}</span>\n        </div>\n    )\n    }\nexport default NowPlaying\n\n"]},"metadata":{},"sourceType":"module"}