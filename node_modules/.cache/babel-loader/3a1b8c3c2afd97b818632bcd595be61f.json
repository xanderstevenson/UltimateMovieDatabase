{"ast":null,"code":"var _jsxFileName = \"/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/NowPlaying/NowPlaying.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst apiURL = \"https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1\";\nvar underline = {\n  textDecoration: 'underline' // const axios = require('axios');\n\n};\nvar info = [];\n\nfunction getTMDBdata() {\n  axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1').then(response => JSON.stringify(response)).then(response => {\n    info = response.toString().split(',');\n  }).catch(function (error) {\n    alert(error);\n  });\n  return info;\n}\n\nfunction getTitleNames(str) {\n  var str2 = str.toString();\n  var id = 0;\n  var list2 = str2.split('\"');\n  var list3 = [];\n\n  for (let i = 0; i < list2.length; i++) {\n    if (list2[i] == \"title\") {\n      list2[i].replace('title', '');\n      list3.push(list2[i + 2] + list2[i - 5]);\n    }\n  }\n\n  return list3;\n}\n\nfunction getNiceListofTitles(list) {\n  var newlist = ''; // for(let i = 0; i < list.length; i++){\n  //  newlist += list[i] + \"/n\"\n  // }\n\n  return list.map(item => {\n    var movieID = item.substring(item.length - 7);\n    var item2 = item.substring(0, item.length - 8);\n    var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US';\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"link\",\n      href: movieURL,\n      target: \"#blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, item2));\n  });\n}\n\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()));\n\nclass NowPlaying extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  }\n\n  getData() {\n    setTimeout(() => {\n      console.log('Our data is fetched');\n      this.setState({\n        data: test\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"page-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Now Playing\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"The following movies \", React.createElement(\"span\", {\n      style: underline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"are now playing\"), \" in theatres:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, getNiceListofTitles(getTitleNames(getTMDBdata()))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.data));\n  }\n\n}\n\nexport default NowPlaying;","map":{"version":3,"sources":["/Users/xander/UltimateMoviegoersGuide/UltimateMovieDatabase/ultimate-movie-db/src/pages/NowPlaying/NowPlaying.js"],"names":["React","Component","axios","apiURL","underline","textDecoration","info","getTMDBdata","get","then","response","JSON","stringify","toString","split","catch","error","alert","getTitleNames","str","str2","id","list2","list3","i","length","replace","push","getNiceListofTitles","list","newlist","map","item","movieID","substring","item2","movieURL","test","NowPlaying","constructor","props","state","data","getData","setTimeout","console","log","setState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nconst apiURL = \"https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1\"\nvar underline = {\n    textDecoration: 'underline'\n}\n// const axios = require('axios');\n\n\nvar info = []\n\nfunction getTMDBdata(){\n    axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=15e1bbc41548aa6ea02bac4f092efa6f&language=en-US&page=1')\n    .then(response => JSON.stringify(response))\n    .then(response => {\n        info = response.toString().split(',')\n    })\n    .catch(function(error){\n        alert(error)\n    })  \n    return info\n}\n\n\nfunction getTitleNames(str){\n    var str2 = str.toString()\n    var id = 0\n    var list2 = str2.split('\"')\n    var list3 = []\n    for(let i = 0; i < list2.length; i ++){\n        if(list2[i] == \"title\"){\n \n            list2[i].replace('title', '')\n            list3.push(list2[i + 2] + list2[i - 5])\n           \n        }\n\n    }\n    return list3 \n}\n\n\nfunction getNiceListofTitles(list){\n    var newlist = ''\n    // for(let i = 0; i < list.length; i++){\n    //  newlist += list[i] + \"/n\"\n    // }\n \n    \n    return list.map((item)=>{\n      var movieID = item.substring(item.length-7)\n      var item2 = item.substring(0, item.length-8)\n      var movieURL = 'https://www.themoviedb.org/movie/' + movieID + '?language=en-US'\n      return <p><a class=\"link\" href= {movieURL} target=\"#blank\">{item2}</a></p>\n    })\n}\n\nvar test = getNiceListofTitles(getTitleNames(getTMDBdata()))\n\nclass NowPlaying extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          data: ''\n        }\n      }\n\n    getData(){\n        setTimeout(() => {\n          console.log('Our data is fetched');\n          this.setState({\n            data: test\n          })\n        }, 1000)\n      }\n\n    componentDidMount(){\n        this.getData();\n      }\n\n\nrender(){\n    return ( \n        <div>\n            <br></br>\n            <h1 className='page-name'>Now Playing</h1>  \n            <br></br>\n                <span><h2>The following movies <span style={underline}>are now playing</span> in theatres:</h2></span>\n                {/* <span>{getTitleNames(getTMDBdata())}</span> */}\n                <span>{getNiceListofTitles(getTitleNames(getTMDBdata()))}</span>\n        \n            <div>\n            {this.state.data}\n            </div>\n                \n        \n        </div>\n    )\n    }\n}\nexport default NowPlaying\n\n"]},"metadata":{},"sourceType":"module"}